{
  "title": "Why Working with Content is Hard for Developers",
  "cover_image": {
    "url": "https://i.imgur.com/RXeIhzq.png",
    "alt": "Working with Content is Hard for Developers",
    "width": 800,
    "height": 259,
    "type": "CoverImage",
    "_raw": {}
  },
  "excerpt": "How we work with content on the web has shifted dramatically since the early days. Yet, working with content is still too difficult for developers.",
  "date": "2022-04-18T00:00:00.000Z",
  "authors": [
    {
      "name": "Sean C Davis",
      "handle": "seancdavis29",
      "avatar": "https://pbs.twimg.com/profile_images/1293212485944827905/5o_xpJzn_400x400.jpg",
      "type": "Author",
      "_raw": {}
    }
  ],
  "related_posts": [
    {
      "slug": "beta",
      "type": "RelatedPost",
      "_raw": {}
    }
  ],
  "seo": {
    "imagePath": "/images/content-is-hard-meta.png",
    "type": "SEO",
    "_raw": {}
  },
  "body": {
    "raw": "\n<TLDR>\n  How we work with content on the web has shifted dramatically since the early days. Yet, working with content is still too difficult for developers.\n\n<BulletList>\n  <BulletListItem type=\"cross\">\n    [Traditional CMSs](#1-traditional-cms-separated-content-from-code) require a lot of knowledge and effort to build,\n    deploy, and maintain.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    [Static site generators](#2-static-site-generators-offered-a-simplified-approach-to-building-contentdriven-websites)\n    don't scale well beyond hobby sites.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    As revolutionary as [headless CMSs](#3-headless-cms-decoupled-content-and-code) were, they didn't make building\n    front-end applications easier.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    [Gatsby](#4-gatsby-popularized-content-as-data-using-graphql) re-imagined the experience of building a website, and\n    yet the opinions it imposes on working with content are limiting.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    [Modern frameworks](#5-modern-frameworks-are-unopinionated-on-content-processing) have brought an incredible\n    developer experience, but require that developers manually build a mechanism to process content.\n  </BulletListItem>\n</BulletList>\n\nThese reasons are **[why we built Contentlayer](#6-contentlayer-makes-content-easy-for-developers)**.\n\n</TLDR>\n\nOver the last two decades, we’ve seen a major shift from template-based content to treating content as data that we can feed into our component-based pages. This shift was made possible through a number of milestones.\n\n<Image\n  src=\"https://i.imgur.com/RXeIhzq.png\"\n  height=\"259\"\n  width=\"800\"\n  className=\"inline-flex w-full justify-center px-4 py-14\"\n/>\n\nAnd yet, while each incremental adjustment has improved the developer experience when working with content, it is still a tiresome process to work with content within a web project.\n\nLet’s look at each of these incremental improvements before suggesting the next step in this evolution.\n\n## Template-Based Content\n\nIn the early days of the web, content was tightly-coupled with code. The introduction of server-side templating and database-driven content brought us into a new era of handling content on the web.\n\n### 1. Traditional CMS Separated Content from Code\n\n<ContentStack\n  content={{ icons: ['database'], label: 'Content Database' }}\n  processor={{ icons: ['wordpress'], label: 'Monolithic Framework' }}\n  pages={{ icons: ['php'], label: 'Server-side Templates' }}\n  decoupled={false}\n/>\n\nEarly web content management systems like Drupal (2001) and WordPress (2003) were game-changers for developers. Before them, content and code were combined. You couldn’t write content for the web without also writing HTML. _That doesn’t sound fun, does it?_\n\nTraditional CMSs are also known as _monolithic applications_, which means that the entire application is tightly coupled. Content is edited through a CMS and stored in a database. When users visit the website, the front end retrieves the necessary content from the database, runs it through a server-side templating language, and delivers HTML to the user’s browser. All of this is accomplished with a single application, often on a single web server.\n\n#### Monolithic Applications are Limiting\n\nAlthough WordPress and Drupal are still around and highly popular today, we don’t talk about them much in conversations on developer experience.\n\n<BulletList>\n  <BulletListItem type=\"cross\">\n    **Managing infrastructure:** Developing a monolithic application usually means _managing the infrastructure_ of that\n    application. You have to know how to work with web servers. You have to be well-versed not just in making database\n    queries, but in managing and optimizing databases themselves.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Slow and insecure:** Though traditional CMSs often have caching mechanisms, they are notorious for slow\n    performance and security vulnerabilities.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Not sufficient for today's needs:** The tools we have at our disposal today turn many developers away from what is\n    becoming an antiquated pattern for building web experiences.\n  </BulletListItem>\n</BulletList>\n\n### 2. Static Site Generators Offered a Simplified Approach to Building Content-Driven Websites\n\n<ContentStack\n  content={{ icons: ['markdown'], label: 'Local Content' }}\n  processor={{ icons: ['jekyll'], label: 'Static Site Generator' }}\n  pages={{ icons: ['template'], label: 'Server-side Templates' }}\n  decoupled={false}\n/>\n\nAbout five years after web-based CMSs were making a splash, Jekyll (2008) came onto the scene to serve the brand new GitHub (2008) and its Pages feature. Jekyll and GitHub Pages led a movement back to static sites as a result of the challenges in managing monolithic applications. There are now _hundreds_ of SSG frameworks, and Jekyll remains among the most popular.\n\nJekyll was made possible by the rising trend of developers writing content in markdown. Markdown (2004) had been established a few years prior to Jekyll as a means to represent formatted text without the tedium of writing HTML.\n\nJekyll and many of the traditional SSGs worked by authoring content in local markdown files (or JSON, YAML, etc.), converting the frontmatter and body content to variables, and then running those variables through a server-side templating language like Liquid.\n\nStoring content as plain text files in a Git repo was an early instance of what we now call Git CMS, which continues to be a developer-centric way to build websites. Git-based content made building and managing custom websites more trivial than ever for developers.\n\n#### Developer Experience with SSGs Degrades Beyond the Hobby Site\n\nThe main problem with this pattern was that it couldn’t really extend much beyond the hobby project. The same remains true for SSGs like Hugo that came later. Though each framework in this category has its own set of features and limitations, these are the most common:\n\n<BulletList>\n  <BulletListItem type=\"cross\">\n    **Validations:** Validating content is either not an option or must be done manually.{'\\n'}\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **TypeScript:** Strongly-typing data is typically not an option. For JavaScript-based SSGs like 11ty, it’s possible,\n    but challenging to implement.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Relationships:** Creating complex relationships among content is often a manual process, and can drastically\n    lengthen build times.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Components & Interactivity:** Client-side component libraries are not supported out of the box. Interactivity is\n    inherently more difficult to implement and manage.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Performance:** Though some SSGs are optimized for build performance (e.g. Hugo), many slow down _significantly_ as\n    the number of files grows.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Tight Coupling:** Content and code are tightly coupled, which means it’s difficult to have a source of truth for\n    content serving multiple websites.\n  </BulletListItem>\n</BulletList>\n\n## Content as Data\n\nWith the advent of more capable front-end frameworks like Angular and React replacing server-side templating languages like Liquid, a new approach for retrieving content was needed. Thus began the movement to treat content as data.\n\n### 3. Headless CMS Decoupled Content and Code\n\n<ContentStack\n  content={{ icons: ['contentful'], label: 'Headless CMS' }}\n  processor={{ icons: ['api'], label: 'API Client' }}\n  pages={{ icons: ['react'], label: 'React Pages' }}\n  decoupled={true}\n/>\n\nFast forward several more years and Contentful (2013) is launched, and begins to popularize the idea of a _headless CMS_. With a headless CMS, content is managed in a separate application and accessed via an API. This is also referred to as an API-Based CMS.\n\nThink of this pattern as splitting a monolithic application in half, where you (the developer) don’t have to manage the content-editing portion. You worry more about accessing that content via an API.\n\nHeadless CMSs emerged during the API economy boom and at the height of the single-page application (SPA) popularity. Many websites would use an API client to access content from the CMS via an API, and feed that through client-side templates, made possible through early libraries like Angular and React.\n\nThe major benefits were:\n\n<BulletList>\n  <BulletListItem type=\"check\">\n    **Simplified front ends:** Developers no longer had to manage the content-editing mechanism for a website. No more\n    databases or authentication for the typical websites.\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **Multiple front ends (omnichannel):** A single content source could serve multiple front-end sites.{'\\n'}\n    {'\\n'}\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **Unlocking SSGs for editors:** Non-technical content editors could manage content for static sites without needing\n    to access Git/GitHub.\n  </BulletListItem>\n</BulletList>\n\n#### Front Ends Weren’t Easier to Build Because of API-Driven Content\n\nAs groundbreaking as these benefits were, they didn’t actually make the process of building a website any easier.\n\n<BulletList>\n  <BulletListItem type=\"cross\">\n    **Added complexity:** It added complexity in a lot of ways. If using a classic web framework like Ruby to manage the\n    front end, you’d have to make API calls for data, rather than being able to use the standard and familiar ORM.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Additional layer:** With SSGs, the addition of a headless CMS meant adding another layer to the application. You’d\n    often still have to cache that data to local files so the SSG could read and render it.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Availability risk:** Because content was stored in a separate application, the risk of content not being available\n    increased.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Previewing difficulties:** Headless CMS also made it more difficult to preview content before publishing,\n    especially when building the site using an SSG.\n  </BulletListItem>\n</BulletList>\n\n### 4. Gatsby Popularized Content as Data using GraphQL\n\n<ContentStack\n  content={{ icons: ['markdown', 'contentful'], label: 'Local/Remote Content' }}\n  processor={{ icons: ['graphql'], label: 'Gatsby GraphQL Layer' }}\n  pages={{ icons: ['react'], label: 'React Pages' }}\n  decoupled={true}\n/>\n\nA couple of years after Contentful hit the scene, Gatsby (2015) was born. Though a static site generator at its core, Gatsby brought with it two game-changing ideas that would eventually place it in a new category of tools we now call _meta frameworks:_\n\n<BulletList>\n  <BulletListItem type=\"check\">\n    **React pages:** Gatsby used React as its templating language, which meant that developers could build interactive,\n    component-based sites without configuring and managing a complex JavaScript bundling process during the build.\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **Content as data:** Gatsby treated content as data. Using a GraphQL layer, developers could run queries and write\n    server-side logic in JavaScript (Node.js), and then feed that data into page-level React components.\n  </BulletListItem>\n</BulletList>\n\nThis was a completely new way of building websites. And the timing happened to coincide with the emergence of Netlify, which made deploying static sites near trivial.\n\n#### Content Processing in Gatsby is too Opinionated\n\nAlthough Gatsby suffered build time challenges similar to other early SSGs, the problem with Gatsby isn’t (exclusively) the build. The bigger problems were found in the opinionated GraphQL layer used to convert content to data. There’s a lot of magic going on under the hood that can lead to a degraded developer experience. For example:\n\n<BulletList>\n  <BulletListItem type=\"cross\">\n    **GraphQL required:** To work with Gatsby, you already have to learn React. Adding this layer means yet another\n    thing (GraphQL) developers have to know to use the tool.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Content validations:** Gatsby doesn’t provide content validations out of the box.{'\\n'}\n    {'\\n'}\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Loose modeling structure:** When working with local markdown, there is no concept of modeling. The content\n    _appears_ structured, but comes as large data objects with potentially conflicting properties and types. _A lot_ of\n    type- and presence-checking is often required.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Lack of TypeScript:** Seven years later and many versions later, it’s still difficult to work with TypeScript.\n  </BulletListItem>\n</BulletList>\n\n### 5. Modern Frameworks are Unopinionated on Content Processing\n\n<ContentStack\n  content={{ icons: ['markdown', 'contentful'], label: 'Local/Remote Content' }}\n  processor={{ icons: ['question'], label: 'DIY Content Processor' }}\n  pages={{ icons: ['react'], label: 'React Pages' }}\n  decoupled={true}\n/>\n\nNext.js (2016), another React meta framework, followed right on Gatsby’s heels and brought with it two additional new patterns:\n\n<BulletList>\n  <BulletListItem type=\"check\">\n    **Variable rendering techniques:** Within a single site, developers could choose whether a page should be statically\n    rendered or server-side rendered. Suddenly we had the power of on-demand content without the need for a single-page\n    application or client-side data fetching.\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **DIY content processing:** Next.js brought no opinion on how content should be handled. It left the GraphQL layer\n    out and instead focused on providing developers the tools they needed to build powerful websites, while bringing\n    content from anywhere.\n  </BulletListItem>\n</BulletList>\n\n#### Building a Content-Processing Mechanism is Really Difficult\n\nNext.js was a massive improvement in developer experience over Gatsby. Yet, to get that boost in DX, we as developers had to build the content-processing mechanism for our site. We’re responsible for figuring out how to convert content into data and to feed that data to our page components.\n\nTo build this type of mechanism is _a lot of work_. And yet, not doing this work with high quality has the effect of degrading the developer experience, which is one of the primary drivers that leads developers to choose Next.\n\nPutting the ideal content processing mechanism in place means accounting for:\n\n<BulletList>\n  <BulletListItem type=\"cross\">\n    **Low-level code:** Writing the processing logic, including working with content-processing libraries and their\n    plugins. This is a lot of base-level logic and adds a number of dependencies to your project.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Caching:** Caching processed data. Caching is hard. Not caching degrades the developer experience.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Content relationships:** Rich and complex content associations, so that objects can live as individual content\n    files but be embedded as necessary when used as data.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Live reloading:** For some frameworks, like Next.js, pages are not live-reloaded automatically when editing\n    markdown content. That’s another mechanism to build.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **TypeScript support:** Generating/writing type definitions. If you want to work with TypeScript and strongly type\n    the data, that must be generated manually.\n  </BulletListItem>\n  <BulletListItem type=\"cross\">\n    **Validations:** Data validation logic will have to be implemented manually, or you’ll want to build an abstracted\n    system that accepts validation settings through configuration.\n  </BulletListItem>\n</BulletList>\n\n### 6. Contentlayer Makes Content Easy for Developers\n\n<ContentStack\n  content={{ icons: ['markdown', 'contentful', 'notion'], label: 'Content' }}\n  processor={{ icons: ['contentlayer'], label: 'Contentlayer', className: 'text-purple-500' }}\n  pages={{ icons: ['react'], label: 'Pages' }}\n  decoupled={true}\n/>\n\nThis is why we created Contentlayer. **Contentlayer makes working with content easy for developers.**\n\nFor modern meta frameworks, Contentlayer is the glue between content and code. It is a content-processing mechanism that converts content into data that can be easily consumed by your pages and components.\n\nContentlayer provides the missing piece needed to maximize developer experience for modern frameworks by including the following features:\n\n<BulletList>\n  <BulletListItem type=\"check\">\n    **Familiarity:** `import` content just as you would any other library or component{'\\n'}\n    {'\\n'}\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **Validations:** Built-in and configurable content validations{'\\n'}\n    {'\\n'}\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **Performance:** Incremental and parallel builds{'\\n'}\n    {'\\n'}\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **TypeScript support:** Strong-typed data (TypeScript types are generated automatically){'\\n'}\n    {'\\n'}\n  </BulletListItem>\n  <BulletListItem type=\"check\">\n    **Live reloading:** When supported by the framework{'\\n'}\n    {'\\n'}\n  </BulletListItem>\n</BulletList>\n\n<Callout className=\"mt-8\">\n  Learn more about Contentlayer by reading [the launch post](/blog/beta) or [getting started](/docs/getting-started)\n  today!\n</Callout>\n",
    "code": "var Component=(()=>{var sn=Object.create;var G=Object.defineProperty;var mn=Object.getOwnPropertyDescriptor;var bn=Object.getOwnPropertyNames;var un=Object.getPrototypeOf,_n=Object.prototype.hasOwnProperty;var X=(s,o)=>()=>(o||s((o={exports:{}}).exports,o),o.exports),fn=(s,o)=>{for(var f in o)G(s,f,{get:o[f],enumerable:!0})},ve=(s,o,f,_)=>{if(o&&typeof o==\"object\"||typeof o==\"function\")for(let a of bn(o))!_n.call(s,a)&&a!==f&&G(s,a,{get:()=>o[a],enumerable:!(_=mn(o,a))||_.enumerable});return s};var pn=(s,o,f)=>(f=s!=null?sn(un(s)):{},ve(o||!s||!s.__esModule?G(f,\"default\",{value:s,enumerable:!0}):f,s)),yn=s=>ve(G({},\"__esModule\",{value:!0}),s);var Ue=X((wn,we)=>{we.exports=React});var ke=X(Q=>{\"use strict\";(function(){\"use strict\";var s=Ue(),o=Symbol.for(\"react.element\"),f=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),a=Symbol.for(\"react.strict_mode\"),S=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),T=Symbol.for(\"react.context\"),P=Symbol.for(\"react.forward_ref\"),L=Symbol.for(\"react.suspense\"),F=Symbol.for(\"react.suspense_list\"),j=Symbol.for(\"react.memo\"),W=Symbol.for(\"react.lazy\"),Ee=Symbol.for(\"react.offscreen\"),K=Symbol.iterator,Re=\"@@iterator\";function Pe(e){if(e===null||typeof e!=\"object\")return null;var d=K&&e[K]||e[Re];return typeof d==\"function\"?d:null}var w=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function p(e){{for(var d=arguments.length,t=new Array(d>1?d-1:0),r=1;r<d;r++)t[r-1]=arguments[r];je(\"error\",e,t)}}function je(e,d,t){{var r=w.ReactDebugCurrentFrame,l=r.getStackAddendum();l!==\"\"&&(d+=\"%s\",t=t.concat([l]));var m=t.map(function(c){return String(c)});m.unshift(\"Warning: \"+d),Function.prototype.apply.call(console[e],console,m)}}var De=!1,Oe=!1,Ae=!1,Me=!1,Ie=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ge(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===S||Ie||e===a||e===L||e===F||Me||e===Ee||De||Oe||Ae||typeof e==\"object\"&&e!==null&&(e.$$typeof===W||e.$$typeof===j||e.$$typeof===g||e.$$typeof===T||e.$$typeof===P||e.$$typeof===Z||e.getModuleId!==void 0))}function Le(e,d,t){var r=e.displayName;if(r)return r;var l=d.displayName||d.name||\"\";return l!==\"\"?t+\"(\"+l+\")\":t}function ee(e){return e.displayName||\"Context\"}function N(e){if(e==null)return null;if(typeof e.tag==\"number\"&&p(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case f:return\"Portal\";case S:return\"Profiler\";case a:return\"StrictMode\";case L:return\"Suspense\";case F:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case T:var d=e;return ee(d)+\".Consumer\";case g:var t=e;return ee(t._context)+\".Provider\";case P:return Le(e,e.render,\"ForwardRef\");case j:var r=e.displayName||null;return r!==null?r:N(e.type)||\"Memo\";case W:{var l=e,m=l._payload,c=l._init;try{return N(c(m))}catch{return null}}}return null}var v=Object.assign,E=0,ne,oe,de,te,ae,re,ie;function ce(){}ce.__reactDisabledLog=!0;function Fe(){{if(E===0){ne=console.log,oe=console.info,de=console.warn,te=console.error,ae=console.group,re=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:ce,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}E++}}function We(){{if(E--,E===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:v({},e,{value:ne}),info:v({},e,{value:oe}),warn:v({},e,{value:de}),error:v({},e,{value:te}),group:v({},e,{value:ae}),groupCollapsed:v({},e,{value:re}),groupEnd:v({},e,{value:ie})})}E<0&&p(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var Y=w.ReactCurrentDispatcher,V;function D(e,d,t){{if(V===void 0)try{throw Error()}catch(l){var r=l.stack.trim().match(/\\n( *(at )?)/);V=r&&r[1]||\"\"}return`\n`+V+e}}var B=!1,O;{var Ye=typeof WeakMap==\"function\"?WeakMap:Map;O=new Ye}function le(e,d){if(!e||B)return\"\";{var t=O.get(e);if(t!==void 0)return t}var r;B=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var m;m=Y.current,Y.current=null,Fe();try{if(d){var c=function(){throw Error()};if(Object.defineProperty(c.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(c,[])}catch(x){r=x}Reflect.construct(e,[],c)}else{try{c.call()}catch(x){r=x}e.call(c.prototype)}}else{try{throw Error()}catch(x){r=x}e()}}catch(x){if(x&&r&&typeof x.stack==\"string\"){for(var i=x.stack.split(`\n`),y=r.stack.split(`\n`),b=i.length-1,u=y.length-1;b>=1&&u>=0&&i[b]!==y[u];)u--;for(;b>=1&&u>=0;b--,u--)if(i[b]!==y[u]){if(b!==1||u!==1)do if(b--,u--,u<0||i[b]!==y[u]){var h=`\n`+i[b].replace(\" at new \",\" at \");return e.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&O.set(e,h),h}while(b>=1&&u>=0);break}}}finally{B=!1,Y.current=m,We(),Error.prepareStackTrace=l}var k=e?e.displayName||e.name:\"\",xe=k?D(k):\"\";return typeof e==\"function\"&&O.set(e,xe),xe}function Ve(e,d,t){return le(e,!1)}function Be(e){var d=e.prototype;return!!(d&&d.isReactComponent)}function A(e,d,t){if(e==null)return\"\";if(typeof e==\"function\")return le(e,Be(e));if(typeof e==\"string\")return D(e);switch(e){case L:return D(\"Suspense\");case F:return D(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case P:return Ve(e.render);case j:return A(e.type,d,t);case W:{var r=e,l=r._payload,m=r._init;try{return A(m(l),d,t)}catch{}}}return\"\"}var M=Object.prototype.hasOwnProperty,se={},me=w.ReactDebugCurrentFrame;function I(e){if(e){var d=e._owner,t=A(e.type,e._source,d?d.type:null);me.setExtraStackFrame(t)}else me.setExtraStackFrame(null)}function $e(e,d,t,r,l){{var m=Function.call.bind(M);for(var c in e)if(m(e,c)){var i=void 0;try{if(typeof e[c]!=\"function\"){var y=Error((r||\"React class\")+\": \"+t+\" type `\"+c+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[c]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw y.name=\"Invariant Violation\",y}i=e[c](d,c,r,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(b){i=b}i&&!(i instanceof Error)&&(I(l),p(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",r||\"React class\",t,c,typeof i),I(null)),i instanceof Error&&!(i.message in se)&&(se[i.message]=!0,I(l),p(\"Failed %s type: %s\",t,i.message),I(null))}}}var qe=Array.isArray;function $(e){return qe(e)}function He(e){{var d=typeof Symbol==\"function\"&&Symbol.toStringTag,t=d&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return t}}function ze(e){try{return be(e),!1}catch{return!0}}function be(e){return\"\"+e}function ue(e){if(ze(e))return p(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",He(e)),be(e)}var R=w.ReactCurrentOwner,Je={key:!0,ref:!0,__self:!0,__source:!0},_e,fe,q;q={};function Xe(e){if(M.call(e,\"ref\")){var d=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(d&&d.isReactWarning)return!1}return e.ref!==void 0}function Qe(e){if(M.call(e,\"key\")){var d=Object.getOwnPropertyDescriptor(e,\"key\").get;if(d&&d.isReactWarning)return!1}return e.key!==void 0}function Ke(e,d){if(typeof e.ref==\"string\"&&R.current&&d&&R.current.stateNode!==d){var t=N(R.current.type);q[t]||(p('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',N(R.current.type),e.ref),q[t]=!0)}}function Ze(e,d){{var t=function(){_e||(_e=!0,p(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",d))};t.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:t,configurable:!0})}}function en(e,d){{var t=function(){fe||(fe=!0,p(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",d))};t.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:t,configurable:!0})}}var nn=function(e,d,t,r,l,m,c){var i={$$typeof:o,type:e,key:d,ref:t,props:c,_owner:m};return i._store={},Object.defineProperty(i._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(i,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:r}),Object.defineProperty(i,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:l}),Object.freeze&&(Object.freeze(i.props),Object.freeze(i)),i};function on(e,d,t,r,l){{var m,c={},i=null,y=null;t!==void 0&&(ue(t),i=\"\"+t),Qe(d)&&(ue(d.key),i=\"\"+d.key),Xe(d)&&(y=d.ref,Ke(d,l));for(m in d)M.call(d,m)&&!Je.hasOwnProperty(m)&&(c[m]=d[m]);if(e&&e.defaultProps){var b=e.defaultProps;for(m in b)c[m]===void 0&&(c[m]=b[m])}if(i||y){var u=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;i&&Ze(c,u),y&&en(c,u)}return nn(e,i,y,l,r,R.current,c)}}var H=w.ReactCurrentOwner,pe=w.ReactDebugCurrentFrame;function U(e){if(e){var d=e._owner,t=A(e.type,e._source,d?d.type:null);pe.setExtraStackFrame(t)}else pe.setExtraStackFrame(null)}var z;z=!1;function J(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===o}function ye(){{if(H.current){var e=N(H.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function dn(e){{if(e!==void 0){var d=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),t=e.lineNumber;return`\n\nCheck your code at `+d+\":\"+t+\".\"}return\"\"}}var he={};function tn(e){{var d=ye();if(!d){var t=typeof e==\"string\"?e:e.displayName||e.name;t&&(d=`\n\nCheck the top-level render call using <`+t+\">.\")}return d}}function ge(e,d){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var t=tn(d);if(he[t])return;he[t]=!0;var r=\"\";e&&e._owner&&e._owner!==H.current&&(r=\" It was passed a child from \"+N(e._owner.type)+\".\"),U(e),p('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',t,r),U(null)}}function Ne(e,d){{if(typeof e!=\"object\")return;if($(e))for(var t=0;t<e.length;t++){var r=e[t];J(r)&&ge(r,d)}else if(J(e))e._store&&(e._store.validated=!0);else if(e){var l=Pe(e);if(typeof l==\"function\"&&l!==e.entries)for(var m=l.call(e),c;!(c=m.next()).done;)J(c.value)&&ge(c.value,d)}}}function an(e){{var d=e.type;if(d==null||typeof d==\"string\")return;var t;if(typeof d==\"function\")t=d.propTypes;else if(typeof d==\"object\"&&(d.$$typeof===P||d.$$typeof===j))t=d.propTypes;else return;if(t){var r=N(d);$e(t,e.props,\"prop\",r,e)}else if(d.PropTypes!==void 0&&!z){z=!0;var l=N(d);p(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",l||\"Unknown\")}typeof d.getDefaultProps==\"function\"&&!d.getDefaultProps.isReactClassApproved&&p(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function rn(e){{for(var d=Object.keys(e.props),t=0;t<d.length;t++){var r=d[t];if(r!==\"children\"&&r!==\"key\"){U(e),p(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",r),U(null);break}}e.ref!==null&&(U(e),p(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),U(null))}}function cn(e,d,t,r,l,m){{var c=Ge(e);if(!c){var i=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var y=dn(l);y?i+=y:i+=ye();var b;e===null?b=\"null\":$(e)?b=\"array\":e!==void 0&&e.$$typeof===o?(b=\"<\"+(N(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):b=typeof e,p(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",b,i)}var u=on(e,d,t,l,m);if(u==null)return u;if(c){var h=d.children;if(h!==void 0)if(r)if($(h)){for(var k=0;k<h.length;k++)Ne(h[k],e);Object.freeze&&Object.freeze(h)}else p(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else Ne(h,e)}return e===_?rn(u):an(u),u}}var ln=cn;Q.Fragment=_,Q.jsxDEV=ln})()});var Se=X((kn,Ce)=>{\"use strict\";Ce.exports=ke()});var xn={};fn(xn,{default:()=>Nn,frontmatter:()=>hn});var n=pn(Se()),hn={title:\"Why Working with Content is Hard for Developers\",cover_image:{url:\"https://i.imgur.com/RXeIhzq.png\",alt:\"Working with Content is Hard for Developers\",width:800,height:259},excerpt:\"How we work with content on the web has shifted dramatically since the early days. Yet, working with content is still too difficult for developers.\",date:new Date(165024e7),authors:[{name:\"Sean C Davis\",handle:\"seancdavis29\",avatar:\"https://pbs.twimg.com/profile_images/1293212485944827905/5o_xpJzn_400x400.jpg\"}],related_posts:[{slug:\"beta\"}],seo:{imagePath:\"/images/content-is-hard-meta.png\"}};function Te(s){let o=Object.assign({p:\"p\",a:\"a\",strong:\"strong\",h2:\"h2\",h3:\"h3\",em:\"em\",h4:\"h4\",code:\"code\"},s.components),{TLDR:f,BulletList:_,BulletListItem:a,Image:S,ContentStack:g,Callout:T}=o;return _||C(\"BulletList\",!0,\"23:1-44:14\"),a||C(\"BulletListItem\",!0,\"24:3-27:20\"),T||C(\"Callout\",!0,\"349:1-352:11\"),g||C(\"ContentStack\",!0,\"69:1-74:3\"),S||C(\"Image\",!0,\"52:1-57:3\"),f||C(\"TLDR\",!0,\"20:1-48:8\"),(0,n.jsxDEV)(n.Fragment,{children:[(0,n.jsxDEV)(f,{children:[(0,n.jsxDEV)(o.p,{children:\"How we work with content on the web has shifted dramatically since the early days. Yet, working with content is still too difficult for developers.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:21,columnNumber:3},this),(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.a,{href:\"#1-traditional-cms-separated-content-from-code\",children:\"Traditional CMSs\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:25,columnNumber:5},this),` require a lot of knowledge and effort to build,\ndeploy, and maintain.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:25,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:24,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.a,{href:\"#2-static-site-generators-offered-a-simplified-approach-to-building-contentdriven-websites\",children:\"Static site generators\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:29,columnNumber:5},this),`\ndon't scale well beyond hobby sites.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:29,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:28,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[\"As revolutionary as \",(0,n.jsxDEV)(o.a,{href:\"#3-headless-cms-decoupled-content-and-code\",children:\"headless CMSs\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:33,columnNumber:25},this),` were, they didn't make building\nfront-end applications easier.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:33,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:32,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.a,{href:\"#4-gatsby-popularized-content-as-data-using-graphql\",children:\"Gatsby\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:37,columnNumber:5},this),` re-imagined the experience of building a website, and\nyet the opinions it imposes on working with content are limiting.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:37,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:36,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.a,{href:\"#5-modern-frameworks-are-unopinionated-on-content-processing\",children:\"Modern frameworks\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:41,columnNumber:5},this),` have brought an incredible\ndeveloper experience, but require that developers manually build a mechanism to process content.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:41,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:40,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:23,columnNumber:1},this),(0,n.jsxDEV)(o.p,{children:[\"These reasons are \",(0,n.jsxDEV)(o.strong,{children:(0,n.jsxDEV)(o.a,{href:\"#6-contentlayer-makes-content-easy-for-developers\",children:\"why we built Contentlayer\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:46,columnNumber:21},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:46,columnNumber:19},this),\".\"]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:46,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:20,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Over the last two decades, we\\u2019ve seen a major shift from template-based content to treating content as data that we can feed into our component-based pages. This shift was made possible through a number of milestones.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:50,columnNumber:1},this),`\n`,(0,n.jsxDEV)(S,{src:\"https://i.imgur.com/RXeIhzq.png\",height:\"259\",width:\"800\",className:\"inline-flex w-full justify-center px-4 py-14\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:52,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"And yet, while each incremental adjustment has improved the developer experience when working with content, it is still a tiresome process to work with content within a web project.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Let\\u2019s look at each of these incremental improvements before suggesting the next step in this evolution.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:61,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h2,{children:\"Template-Based Content\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:63,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"In the early days of the web, content was tightly-coupled with code. The introduction of server-side templating and database-driven content brought us into a new era of handling content on the web.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h3,{children:\"1. Traditional CMS Separated Content from Code\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:67,columnNumber:1},this),`\n`,(0,n.jsxDEV)(g,{content:{icons:[\"database\"],label:\"Content Database\"},processor:{icons:[\"wordpress\"],label:\"Monolithic Framework\"},pages:{icons:[\"php\"],label:\"Server-side Templates\"},decoupled:!1},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:69,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:[\"Early web content management systems like Drupal (2001) and WordPress (2003) were game-changers for developers. Before them, content and code were combined. You couldn\\u2019t write content for the web without also writing HTML. \",(0,n.jsxDEV)(o.em,{children:\"That doesn\\u2019t sound fun, does it?\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:76,columnNumber:224},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:76,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:[\"Traditional CMSs are also known as \",(0,n.jsxDEV)(o.em,{children:\"monolithic applications\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:78,columnNumber:36},this),\", which means that the entire application is tightly coupled. Content is edited through a CMS and stored in a database. When users visit the website, the front end retrieves the necessary content from the database, runs it through a server-side templating language, and delivers HTML to the user\\u2019s browser. All of this is accomplished with a single application, often on a single web server.\"]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:78,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h4,{children:\"Monolithic Applications are Limiting\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:80,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Although WordPress and Drupal are still around and highly popular today, we don\\u2019t talk about them much in conversations on developer experience.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:82,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Managing infrastructure:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:86,columnNumber:5},this),\" Developing a monolithic application usually means \",(0,n.jsxDEV)(o.em,{children:\"managing the infrastructure\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:86,columnNumber:84},this),` of that\napplication. You have to know how to work with web servers. You have to be well-versed not just in making database\nqueries, but in managing and optimizing databases themselves.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:86,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:85,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Slow and insecure:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:91,columnNumber:5},this),` Though traditional CMSs often have caching mechanisms, they are notorious for slow\nperformance and security vulnerabilities.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:91,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:90,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Not sufficient for today's needs:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:95,columnNumber:5},this),` The tools we have at our disposal today turn many developers away from what is\nbecoming an antiquated pattern for building web experiences.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:95,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:94,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:84,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h3,{children:\"2. Static Site Generators Offered a Simplified Approach to Building Content-Driven Websites\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:100,columnNumber:1},this),`\n`,(0,n.jsxDEV)(g,{content:{icons:[\"markdown\"],label:\"Local Content\"},processor:{icons:[\"jekyll\"],label:\"Static Site Generator\"},pages:{icons:[\"template\"],label:\"Server-side Templates\"},decoupled:!1},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:102,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:[\"About five years after web-based CMSs were making a splash, Jekyll (2008) came onto the scene to serve the brand new GitHub (2008) and its Pages feature. Jekyll and GitHub Pages led a movement back to static sites as a result of the challenges in managing monolithic applications. There are now \",(0,n.jsxDEV)(o.em,{children:\"hundreds\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:109,columnNumber:296},this),\" of SSG frameworks, and Jekyll remains among the most popular.\"]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:109,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Jekyll was made possible by the rising trend of developers writing content in markdown. Markdown (2004) had been established a few years prior to Jekyll as a means to represent formatted text without the tedium of writing HTML.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:111,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Jekyll and many of the traditional SSGs worked by authoring content in local markdown files (or JSON, YAML, etc.), converting the frontmatter and body content to variables, and then running those variables through a server-side templating language like Liquid.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:113,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Storing content as plain text files in a Git repo was an early instance of what we now call Git CMS, which continues to be a developer-centric way to build websites. Git-based content made building and managing custom websites more trivial than ever for developers.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:115,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h4,{children:\"Developer Experience with SSGs Degrades Beyond the Hobby Site\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:117,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"The main problem with this pattern was that it couldn\\u2019t really extend much beyond the hobby project. The same remains true for SSGs like Hugo that came later. Though each framework in this category has its own set of features and limitations, these are the most common:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:119,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Validations:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:123,columnNumber:5},this),\" Validating content is either not an option or must be done manually.\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:123,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:122,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"TypeScript:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:126,columnNumber:5},this),` Strongly-typing data is typically not an option. For JavaScript-based SSGs like 11ty, it\\u2019s possible,\nbut challenging to implement.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:126,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:125,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Relationships:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:130,columnNumber:5},this),` Creating complex relationships among content is often a manual process, and can drastically\nlengthen build times.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:130,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:129,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Components & Interactivity:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:134,columnNumber:5},this),` Client-side component libraries are not supported out of the box. Interactivity is\ninherently more difficult to implement and manage.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:134,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:133,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Performance:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:138,columnNumber:5},this),\" Though some SSGs are optimized for build performance (e.g. Hugo), many slow down \",(0,n.jsxDEV)(o.em,{children:\"significantly\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:138,columnNumber:103},this),` as\nthe number of files grows.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:138,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:137,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Tight Coupling:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:142,columnNumber:5},this),` Content and code are tightly coupled, which means it\\u2019s difficult to have a source of truth for\ncontent serving multiple websites.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:142,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:141,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:121,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h2,{children:\"Content as Data\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:147,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"With the advent of more capable front-end frameworks like Angular and React replacing server-side templating languages like Liquid, a new approach for retrieving content was needed. Thus began the movement to treat content as data.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:149,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h3,{children:\"3. Headless CMS Decoupled Content and Code\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:151,columnNumber:1},this),`\n`,(0,n.jsxDEV)(g,{content:{icons:[\"contentful\"],label:\"Headless CMS\"},processor:{icons:[\"api\"],label:\"API Client\"},pages:{icons:[\"react\"],label:\"React Pages\"},decoupled:!0},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:153,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:[\"Fast forward several more years and Contentful (2013) is launched, and begins to popularize the idea of a \",(0,n.jsxDEV)(o.em,{children:\"headless CMS\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:160,columnNumber:107},this),\". With a headless CMS, content is managed in a separate application and accessed via an API. This is also referred to as an API-Based CMS.\"]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:160,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Think of this pattern as splitting a monolithic application in half, where you (the developer) don\\u2019t have to manage the content-editing portion. You worry more about accessing that content via an API.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:162,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Headless CMSs emerged during the API economy boom and at the height of the single-page application (SPA) popularity. Many websites would use an API client to access content from the CMS via an API, and feed that through client-side templates, made possible through early libraries like Angular and React.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:164,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"The major benefits were:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:166,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"check\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Simplified front ends:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:170,columnNumber:5},this),` Developers no longer had to manage the content-editing mechanism for a website. No more\ndatabases or authentication for the typical websites.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:170,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:169,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:[(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Multiple front ends (omnichannel):\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:174,columnNumber:5},this),\" A single content source could serve multiple front-end sites.\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:174,columnNumber:5},this),`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:173,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Unlocking SSGs for editors:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:178,columnNumber:5},this),` Non-technical content editors could manage content for static sites without needing\nto access Git/GitHub.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:178,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:177,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:168,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h4,{children:\"Front Ends Weren\\u2019t Easier to Build Because of API-Driven Content\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:183,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"As groundbreaking as these benefits were, they didn\\u2019t actually make the process of building a website any easier.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:185,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Added complexity:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:189,columnNumber:5},this),` It added complexity in a lot of ways. If using a classic web framework like Ruby to manage the\nfront end, you\\u2019d have to make API calls for data, rather than being able to use the standard and familiar ORM.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:189,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:188,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Additional layer:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:193,columnNumber:5},this),` With SSGs, the addition of a headless CMS meant adding another layer to the application. You\\u2019d\noften still have to cache that data to local files so the SSG could read and render it.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:193,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:192,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Availability risk:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:197,columnNumber:5},this),` Because content was stored in a separate application, the risk of content not being available\nincreased.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:197,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:196,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Previewing difficulties:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:201,columnNumber:5},this),` Headless CMS also made it more difficult to preview content before publishing,\nespecially when building the site using an SSG.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:201,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:200,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:187,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h3,{children:\"4. Gatsby Popularized Content as Data using GraphQL\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:206,columnNumber:1},this),`\n`,(0,n.jsxDEV)(g,{content:{icons:[\"markdown\",\"contentful\"],label:\"Local/Remote Content\"},processor:{icons:[\"graphql\"],label:\"Gatsby GraphQL Layer\"},pages:{icons:[\"react\"],label:\"React Pages\"},decoupled:!0},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:208,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:[\"A couple of years after Contentful hit the scene, Gatsby (2015) was born. Though a static site generator at its core, Gatsby brought with it two game-changing ideas that would eventually place it in a new category of tools we now call \",(0,n.jsxDEV)(o.em,{children:\"meta frameworks:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:215,columnNumber:236},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:215,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"check\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"React pages:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:219,columnNumber:5},this),` Gatsby used React as its templating language, which meant that developers could build interactive,\ncomponent-based sites without configuring and managing a complex JavaScript bundling process during the build.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:219,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:218,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Content as data:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:223,columnNumber:5},this),` Gatsby treated content as data. Using a GraphQL layer, developers could run queries and write\nserver-side logic in JavaScript (Node.js), and then feed that data into page-level React components.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:223,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:222,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:217,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"This was a completely new way of building websites. And the timing happened to coincide with the emergence of Netlify, which made deploying static sites near trivial.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:228,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h4,{children:\"Content Processing in Gatsby is too Opinionated\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:230,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Although Gatsby suffered build time challenges similar to other early SSGs, the problem with Gatsby isn\\u2019t (exclusively) the build. The bigger problems were found in the opinionated GraphQL layer used to convert content to data. There\\u2019s a lot of magic going on under the hood that can lead to a degraded developer experience. For example:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:232,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"GraphQL required:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:236,columnNumber:5},this),` To work with Gatsby, you already have to learn React. Adding this layer means yet another\nthing (GraphQL) developers have to know to use the tool.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:236,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:235,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:[(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Content validations:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:240,columnNumber:5},this),\" Gatsby doesn\\u2019t provide content validations out of the box.\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:240,columnNumber:5},this),`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:239,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Loose modeling structure:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:244,columnNumber:5},this),` When working with local markdown, there is no concept of modeling. The content\n`,(0,n.jsxDEV)(o.em,{children:\"appears\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:245,columnNumber:5},this),\" structured, but comes as large data objects with potentially conflicting properties and types. \",(0,n.jsxDEV)(o.em,{children:\"A lot\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:245,columnNumber:110},this),` of\ntype- and presence-checking is often required.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:244,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:243,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Lack of TypeScript:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:249,columnNumber:5},this),\" Seven years later and many versions later, it\\u2019s still difficult to work with TypeScript.\"]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:249,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:248,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:234,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h3,{children:\"5. Modern Frameworks are Unopinionated on Content Processing\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:253,columnNumber:1},this),`\n`,(0,n.jsxDEV)(g,{content:{icons:[\"markdown\",\"contentful\"],label:\"Local/Remote Content\"},processor:{icons:[\"question\"],label:\"DIY Content Processor\"},pages:{icons:[\"react\"],label:\"React Pages\"},decoupled:!0},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:255,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Next.js (2016), another React meta framework, followed right on Gatsby\\u2019s heels and brought with it two additional new patterns:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:262,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"check\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Variable rendering techniques:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:266,columnNumber:5},this),` Within a single site, developers could choose whether a page should be statically\nrendered or server-side rendered. Suddenly we had the power of on-demand content without the need for a single-page\napplication or client-side data fetching.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:266,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:265,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"DIY content processing:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:271,columnNumber:5},this),` Next.js brought no opinion on how content should be handled. It left the GraphQL layer\nout and instead focused on providing developers the tools they needed to build powerful websites, while bringing\ncontent from anywhere.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:271,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:270,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:264,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h4,{children:\"Building a Content-Processing Mechanism is Really Difficult\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:277,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Next.js was a massive improvement in developer experience over Gatsby. Yet, to get that boost in DX, we as developers had to build the content-processing mechanism for our site. We\\u2019re responsible for figuring out how to convert content into data and to feed that data to our page components.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:279,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:[\"To build this type of mechanism is \",(0,n.jsxDEV)(o.em,{children:\"a lot of work\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:281,columnNumber:36},this),\". And yet, not doing this work with high quality has the effect of degrading the developer experience, which is one of the primary drivers that leads developers to choose Next.\"]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:281,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Putting the ideal content processing mechanism in place means accounting for:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:283,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Low-level code:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:287,columnNumber:5},this),` Writing the processing logic, including working with content-processing libraries and their\nplugins. This is a lot of base-level logic and adds a number of dependencies to your project.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:287,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:286,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Caching:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:291,columnNumber:5},this),\" Caching processed data. Caching is hard. Not caching degrades the developer experience.\"]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:291,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:290,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Content relationships:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:294,columnNumber:5},this),` Rich and complex content associations, so that objects can live as individual content\nfiles but be embedded as necessary when used as data.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:294,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:293,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Live reloading:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:298,columnNumber:5},this),` For some frameworks, like Next.js, pages are not live-reloaded automatically when editing\nmarkdown content. That\\u2019s another mechanism to build.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:298,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:297,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"TypeScript support:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:302,columnNumber:5},this),` Generating/writing type definitions. If you want to work with TypeScript and strongly type\nthe data, that must be generated manually.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:302,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:301,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"cross\",children:(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Validations:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:306,columnNumber:5},this),` Data validation logic will have to be implemented manually, or you\\u2019ll want to build an abstracted\nsystem that accepts validation settings through configuration.`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:306,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:305,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:285,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.h3,{children:\"6. Contentlayer Makes Content Easy for Developers\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:311,columnNumber:1},this),`\n`,(0,n.jsxDEV)(g,{content:{icons:[\"markdown\",\"contentful\",\"notion\"],label:\"Content\"},processor:{icons:[\"contentlayer\"],label:\"Contentlayer\",className:\"text-purple-500\"},pages:{icons:[\"react\"],label:\"Pages\"},decoupled:!0},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:313,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:[\"This is why we created Contentlayer. \",(0,n.jsxDEV)(o.strong,{children:\"Contentlayer makes working with content easy for developers.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:320,columnNumber:38},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:320,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"For modern meta frameworks, Contentlayer is the glue between content and code. It is a content-processing mechanism that converts content into data that can be easily consumed by your pages and components.\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:322,columnNumber:1},this),`\n`,(0,n.jsxDEV)(o.p,{children:\"Contentlayer provides the missing piece needed to maximize developer experience for modern frameworks by including the following features:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:324,columnNumber:1},this),`\n`,(0,n.jsxDEV)(_,{children:[(0,n.jsxDEV)(a,{type:\"check\",children:[(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Familiarity:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:328,columnNumber:5},this),\" \",(0,n.jsxDEV)(o.code,{children:\"import\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:328,columnNumber:22},this),\" content just as you would any other library or component\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:328,columnNumber:5},this),`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:327,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:[(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Validations:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:332,columnNumber:5},this),\" Built-in and configurable content validations\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:332,columnNumber:5},this),`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:331,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:[(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Performance:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:336,columnNumber:5},this),\" Incremental and parallel builds\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:336,columnNumber:5},this),`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:335,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:[(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"TypeScript support:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:340,columnNumber:5},this),\" Strong-typed data (TypeScript types are generated automatically)\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:340,columnNumber:5},this),`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:339,columnNumber:3},this),(0,n.jsxDEV)(a,{type:\"check\",children:[(0,n.jsxDEV)(o.p,{children:[(0,n.jsxDEV)(o.strong,{children:\"Live reloading:\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:344,columnNumber:5},this),\" When supported by the framework\",`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:344,columnNumber:5},this),`\n`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:343,columnNumber:3},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:326,columnNumber:1},this),`\n`,(0,n.jsxDEV)(T,{className:\"mt-8\",children:(0,n.jsxDEV)(o.p,{children:[\"Learn more about Contentlayer by reading \",(0,n.jsxDEV)(o.a,{href:\"/blog/beta\",children:\"the launch post\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:350,columnNumber:44},this),\" or \",(0,n.jsxDEV)(o.a,{href:\"/docs/getting-started\",children:\"getting started\"},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:350,columnNumber:77},this),`\ntoday!`]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:350,columnNumber:3},this)},void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:349,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\",lineNumber:1,columnNumber:1},this)}function gn(s={}){let{wrapper:o}=s.components||{};return o?(0,n.jsxDEV)(o,Object.assign({},s,{children:(0,n.jsxDEV)(Te,s,void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\"},this)}),void 0,!1,{fileName:\"/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx\"},this):Te(s)}var Nn=gn;function C(s,o,f){throw new Error(\"Expected \"+(o?\"component\":\"object\")+\" `\"+s+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(f?\"\\nIt\\u2019s referenced in your code at `\"+f+\"` in `/Users/simao/my_code/yoo-page-doc/content/blog/_mdx_bundler_entry_point-c65889c9-ab97-4dbb-b822-1ac5a18d32dd.mdx`\":\"\"))}return yn(xn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog/working-with-content-is-hard-for-developers.mdx",
  "_raw": {
    "sourceFilePath": "blog/working-with-content-is-hard-for-developers.mdx",
    "sourceFileName": "working-with-content-is-hard-for-developers.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/working-with-content-is-hard-for-developers"
  },
  "type": "Post",
  "url_path": "/blog/working-with-content-is-hard-for-developers",
  "slug": "working-with-content-is-hard-for-developers",
  "headings": [
    {
      "level": 1,
      "title": "Why Working with Content is Hard for Developers"
    },
    {
      "level": 2,
      "title": "Template-Based Content"
    },
    {
      "level": 3,
      "title": "1. Traditional CMS Separated Content from Code"
    },
    {
      "level": 4,
      "title": "Monolithic Applications are Limiting"
    },
    {
      "level": 3,
      "title": "2. Static Site Generators Offered a Simplified Approach to Building Content-Driven Websites"
    },
    {
      "level": 4,
      "title": "Developer Experience with SSGs Degrades Beyond the Hobby Site"
    },
    {
      "level": 2,
      "title": "Content as Data"
    },
    {
      "level": 3,
      "title": "3. Headless CMS Decoupled Content and Code"
    },
    {
      "level": 4,
      "title": "Front Ends Weren’t Easier to Build Because of API-Driven Content"
    },
    {
      "level": 3,
      "title": "4. Gatsby Popularized Content as Data using GraphQL"
    },
    {
      "level": 4,
      "title": "Content Processing in Gatsby is too Opinionated"
    },
    {
      "level": 3,
      "title": "5. Modern Frameworks are Unopinionated on Content Processing"
    },
    {
      "level": 4,
      "title": "Building a Content-Processing Mechanism is Really Difficult"
    },
    {
      "level": 3,
      "title": "6. Contentlayer Makes Content Easy for Developers"
    }
  ]
}